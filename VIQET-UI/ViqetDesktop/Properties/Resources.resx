<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="Analyze" xml:space="preserve">
    <value>Analyze</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="ClearAll" xml:space="preserve">
    <value>Clear All</value>
  </data>
  <data name="DeleteSelected" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DetailedResults" xml:space="preserve">
    <value>Detailed Results</value>
  </data>
  <data name="EditCurrentTest" xml:space="preserve">
    <value>Edit Current Test</value>
  </data>
  <data name="EditSelected" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="ExportCSV" xml:space="preserve">
    <value>Export as CSV</value>
  </data>
  <data name="ExportPDF" xml:space="preserve">
    <value>Export as PDF</value>
  </data>
  <data name="ExportXML" xml:space="preserve">
    <value>Export as XML</value>
  </data>
  <data name="Finished" xml:space="preserve">
    <value>Finished</value>
  </data>
  <data name="NewTest" xml:space="preserve">
    <value>New Test</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="OpenSelected" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="OutputCategory" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="OverallMOS" xml:space="preserve">
    <value>Overall</value>
  </data>
  <data name="PhotoCount" xml:space="preserve">
    <value>Photo Count</value>
  </data>
  <data name="Prev" xml:space="preserve">
    <value>Prev</value>
  </data>
  <data name="ProductName" xml:space="preserve">
    <value>VIQET</value>
  </data>
  <data name="ProductType" xml:space="preserve">
    <value>Desktop</value>
  </data>
  <data name="ProMode" xml:space="preserve">
    <value>Pro Mode</value>
  </data>
  <data name="MOS" xml:space="preserve">
    <value>MOS</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SubmitScore" xml:space="preserve">
    <value>Submit Score</value>
  </data>
  <data name="ImportPhotos" xml:space="preserve">
    <value>Import Photos</value>
  </data>
  <data name="Stop" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="TestName" xml:space="preserve">
    <value>Test Name</value>
  </data>
  <data name="CollapsePhotos" xml:space="preserve">
    <value>Collapse Visualization</value>
  </data>
  <data name="ExpandPhotos" xml:space="preserve">
    <value>Expand Visualization</value>
  </data>
  <data name="Of" xml:space="preserve">
    <value>of</value>
  </data>
  <data name="ProcessingPhoto" xml:space="preserve">
    <value>Processing Photo</value>
  </data>
  <data name="Stopping" xml:space="preserve">
    <value>Stopping</value>
  </data>
  <data name="Visualization" xml:space="preserve">
    <value>Visualization</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="DefaultTestName" xml:space="preserve">
    <value>Enter Test Name Here</value>
  </data>
  <data name="DisplayPhotoMOS" xml:space="preserve">
    <value>Display individual photo MOS</value>
  </data>
  <data name="EnforceMethodology" xml:space="preserve">
    <value>Check for minimum number of photos</value>
  </data>
  <data name="NoPhotosSelected" xml:space="preserve">
    <value>Please add photos</value>
  </data>
  <data name="MethodologyNotFollowed" xml:space="preserve">
    <value>Methodology not followed</value>
  </data>
  <data name="SaveSettings" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="ExceptionDetails" xml:space="preserve">
    <value>Exception Details:</value>
  </data>
  <data name="PhotoProcessingError" xml:space="preserve">
    <value>Error: Backend DLL threw an exception while processing photo</value>
  </data>
  <data name="ResultDeletedError" xml:space="preserve">
    <value>Error: Result has been deleted</value>
  </data>
  <data name="ResultDoesntExistError" xml:space="preserve">
    <value>The result you clicked has been deleted by another instance of the application. Click OK to refresh this window.</value>
  </data>
  <data name="VersionFetchError" xml:space="preserve">
    <value>Error: Backend DLL threw an exception while fetching version info</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="ProductDescription" xml:space="preserve">
    <value>VQEG Image Quality Evaluation Tool (VIQET)</value>
  </data>
  <data name="NA" xml:space="preserve">
    <value>N/A</value>
  </data>
  <data name="VersionName" xml:space="preserve">
    <value>Preview Release</value>
  </data>
  <data name="BackToMainScreenWarning" xml:space="preserve">
    <value>Back to home page</value>
  </data>
  <data name="DeleteMultipleItems" xml:space="preserve">
    <value>Delete Multiple Items</value>
  </data>
  <data name="DeletePhotosConfirmationMessage" xml:space="preserve">
    <value>Are you sure you want to remove these photos from the test?</value>
  </data>
  <data name="DeleteTestsConfirmationMessage" xml:space="preserve">
    <value>Are you sure you want to permanently delete these tests?</value>
  </data>
  <data name="ExitSelectPhotosWarning" xml:space="preserve">
    <value>Are you sure you want to go back to the main screen? Any changes made to this test will be lost</value>
  </data>
  <data name="AboutPageText" xml:space="preserve">
    <value>VQEG Image Quality Evaluation Tool (VIQET) is a free and open source tool for evaluating quality of consumer photos. VIQET is easy to use and based on objective no-reference image quality evaluation methods. More information about VQEG projects is available at www.vqeg.org</value>
  </data>
  <data name="MoreInfo" xml:space="preserve">
    <value>More Info</value>
  </data>
  <data name="GeneralGuidelines" xml:space="preserve">
    <value>Guidelines</value>
  </data>
  <data name="FlatRegionError" xml:space="preserve">
    <value>VIQET was not able to identify flat regions in some test photos. This may be because those test photos do not follow VIQET methodology or might have high noise. </value>
  </data>
  <data name="AndroidIsAvailableToo" xml:space="preserve">
    <value>Download our Android app and enjoy instant analysis of your photos without the hassle of syncing your photos to your PC!</value>
  </data>
  <data name="ClickToReadMore" xml:space="preserve">
    <value>Click here to read more</value>
  </data>
  <data name="DidYouKnow" xml:space="preserve">
    <value>Did you know?</value>
  </data>
  <data name="BreadCrumb1" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="BreadCrumb2" xml:space="preserve">
    <value>2</value>
  </data>
  <data name="BreadCrumb3" xml:space="preserve">
    <value>3</value>
  </data>
  <data name="BreadCrumb4" xml:space="preserve">
    <value>4</value>
  </data>
  <data name="BreadCrumbTitle1" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="BreadCrumbTitle2" xml:space="preserve">
    <value>Import Photos</value>
  </data>
  <data name="BreadCrumbTitle3" xml:space="preserve">
    <value>Processing</value>
  </data>
  <data name="BreadCrumbTitle4" xml:space="preserve">
    <value>Results</value>
  </data>
  <data name="ImageDetails" xml:space="preserve">
    <value>Images</value>
  </data>
  <data name="OverallInfo" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="IncorrectName" xml:space="preserve">
    <value>Please enter a test name</value>
  </data>
  <data name="ImportMorePhotos" xml:space="preserve">
    <value>Import More Photos</value>
  </data>
  <data name="HomeButton" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="MOSAbbr" xml:space="preserve">
    <value>Mean Opinion Scores</value>
  </data>
  <data name="ResultPageOverallHeader" xml:space="preserve">
    <value>Estimated Mean Opinion Scores (MOS) +/- Standard Error</value>
  </data>
  <data name="ExportAsLabel" xml:space="preserve">
    <value>Export as</value>
  </data>
  <data name="NoteAboutMinPhotos" xml:space="preserve">
    <value>At least 5 photos in each input category are required to calculate overall scores</value>
  </data>
  <data name="NoteAboutMinPhotosCategory" xml:space="preserve">
    <value>At least 5 photos in each input category are required to calculate category scores</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
</root>